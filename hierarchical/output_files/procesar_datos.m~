close all

%azul [0 0 1]
color = {[1 0 0], [0 1 1], [.5 1 0], [1 0 1], [1 .9 0], [0 0 0], [1 .5 0], [.5 0 1], [.5 .5 .5], [.7 .7 0], [.7 0 .7], [0 .7 .7]};
%         rojo    celeste    verde   magenta  amarillo   negro   naranja   violeta      gris      mostaza    morado     turquesa

est_type = {'standard', 'non std', 'bas fun'};

for mark_param = [.5];
    
        for problem = 4
            for degree = 3 % polynomial degree
            
            data = cell(1,3);
            unif = load(sprintf('aigmdata_problem%d_degree%d_est%d_mark%2d.txt',problem,degree,0,mark_param*100));
            figure
            %subplot(2,2,degree-1)
            loglog(unif(:,1),unif(:,3), '*-','Color', [0 0 1])
            hold on
            for i = [1 3]
                data{i}=load(sprintf('aigmdata_problem%d_degree%d_est%d_mark%2d.txt',problem,degree,i,mark_param*100));
                loglog(data{i}(:,1),data{i}(:,3), '*-','Color', color{i})
                loglog(data{i}(:,1),data{i}(:,4), 'o-','Color', color{i})
            end
            
            loglog([1e2 1e2 1e3 1e2],[10^(-4-degree/2) 10^(-4) 10^(-4-degree/2) 10^(-4-degree/2)],'k')
%             if problem == 1
%                 xlim([9 1000])
%             else
%                 xlim([9 150])
%             end
            hold off
            
            rotulo = cell(1,8);
            rotulo{1} = 'error (global ref)';
            for i = [1 3]
                rotulo{2*i} = sprintf('error (est: %s)',est_type{i});
                rotulo{2*i+1} = sprintf('est   (est: %s)',est_type{i});
            end
            rotulo{8} = sprintf('slope = -%d/2', degree);
            legend(rotulo)
            title(sprintf('Problem %d, degree = %d, theta = %1.2f',problem,degree,mark_param))
            eval(sprintf('print -depsc figure%d',degree-1))
        end
    end
end
    
   
